import{_ as e,c as t,o as a,a6 as o}from"./chunks/framework.DqUcIUZK.js";const u=JSON.parse('{"title":"SymbolicAnalysis.jl","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),r={name:"index.md"},i=o('<h1 id="symbolicanalysis-jl" tabindex="-1">SymbolicAnalysis.jl <a class="header-anchor" href="#symbolicanalysis-jl" aria-label="Permalink to &quot;SymbolicAnalysis.jl&quot;">â€‹</a></h1><p>Symbolics-based function property propagation for optimization</p><p>SymbolicAnalysis is a package for implementing the Disciplined Programming approach to optimization, As demonstrated by the <a href="https://dcp.stanford.edu/" target="_blank" rel="noreferrer">DCP framework</a>, and further followups to it for further classes of functions <a href="https://www.cvxpy.org/tutorial/index.html" target="_blank" rel="noreferrer">https://www.cvxpy.org/tutorial/index.html</a> such as DGP, DQP etc, symbolic representation of problems can be leveraged to identify and facilitate building convex (or similar function properties) expressions.</p><p>This package aims to utilize expression graph rewriting and metadata propagation supported by Symbolics.jl, to support propagation of several of these properties - limited right now to Euclidean Convexity and Geodesic Convexity on the Symmetric Positive Definite manifold. This package provides an easy to expand implementation of &quot;atoms&quot; that are functions that have known properties. This allows users to add atoms to the library more easily than the previous implementations <a href="https://www.cvxpy.org/index.html" target="_blank" rel="noreferrer">CVXPY</a> and <a href="https://github.com/jump-dev/Convex.jl" target="_blank" rel="noreferrer">Convex.jl</a> as well as a more performant implementation of the function property propagation.</p>',4),n=[i];function s(l,p,c,d,m,h){return a(),t("div",null,n)}const _=e(r,[["render",s]]);export{u as __pageData,_ as default};
